!function(e,t){"use strict";function s(e){return e.world}class GameSystem extends t.System{constructor(){super(...arguments),this._scenes=new Map,this._assetManagers=new Map,this.onSceneSwitched=new e.Observable}get renderingCanvas(){return this._engine.getRenderingCanvas()}get activeSceneName(){return this._activeSceneName}init(){this._render=this._render.bind(this)}start(t,s,r,i){return this._engine=new e.Engine(t,s,r,i),this._engine.runRenderLoop(this._render),this}addScene(t,s){let r=new e.Scene(this._engine,s);this._scenes.set(t,r);let i=new e.AssetsManager(r);return i.useDefaultLoadingScreen=!1,this._assetManagers.set(t,i),1===this._engine.scenes.length&&(this._activeSceneName=t),this}removeScene(e){return e!==this.activeSceneName&&this.getScene(e).dispose(),this}switchScene(e){return this.getScene(e)&&(this._activeSceneName=e,this.onSceneSwitched.notifyObservers(this.getScene(e))),this}getScene(e){return e?this._scenes.get(e):this._scenes.get(this._activeSceneName)}getAssetManager(e){return e?this._assetManagers.get(e):this._assetManagers.get(this._activeSceneName)}_render(){s(this).execute(this._engine.getDeltaTime(),performance.now()),s(this).enabled&&this.getScene().render()}}function r(e,t,s){return e&&t&&s?{x:e,y:t,z:s}:{x:0,y:0,z:0}}class Transform{constructor(){this.position=r(),this.rotation=r(),this.scale=r(1,1,1)}}class Camera{constructor(){this.pointerLock=!1}}var i,n,a,o,c;!function(e){e.Box="Box",e.Plane="Plane",e.Sphere="Sphere",e.Ground="Ground"}(i||(i={}));class Mesh{constructor(){this.type=i.Box,this.options={}}}!function(e){e.Point="Point",e.Directional="Directional",e.Spot="Spot",e.Hemispheric="Hemispheric"}(n||(n={}));class Light{constructor(){this.type=n.Hemispheric,this.direction=r()}}function h(e){return s(e).getSystem(GameSystem)}function d(e,t){return h(e).getScene(t)}function m(e,t){return h(e).getAssetManager(t)}function l(e){return h(e).activeSceneName}function u(t){return e.Angle.FromDegrees(t).radians()}function p(t){return new e.Vector3(t.x,t.y,t.z)}function g(t){return new e.Vector3(u(t.x),u(t.y),u(t.z))}function y(t){return e.Color3.FromHexString(t)}function S(t){return e.Color4.FromHexString(t)}function f(e,t){e.object[t]=e[t]}function b(e,t){e.object[t]=p(e[t])}function C(e){let t=e.getComponents();for(let s in t){let r=t[s];r.object&&e.hasComponent(Transform)&&x(e.getMutableComponent(Transform),r)}}function x(e,t){let s=t.object;s.position&&(s.position=p(e.position)),s.rotation&&(s.rotation=g(e.rotation)),s.scaling&&(s.scaling=p(e.scale))}function M(e){e.object&&e.object.dispose()}function _(e,t,s){for(let r in t){let i=t[r];s.addTextureTask(r,i.url).onSuccess=t=>{let s=t.texture;for(let e in i)"url"!==e&&(s[e]=i[e]);let n=`${r}Texture`,a=e.object;a[n]&&M(a[n]),a[n]=s}}s.load(),s.reset()}class Material{constructor(){var e;this.color=e?{diffuse:e}:{diffuse:"#ffffff"}}}!function(e){e.Point="Point",e.Box="Box",e.Sphere="Sphere",e.DirectedSphere="DirectedSphere",e.Hemisphere="Hemisphere",e.Cylinder="Cylinder",e.DirectedCylinder="DirectedCylinder",e.Cone="Cone"}(a||(a={}));class Particle{constructor(){this.type=a.Point,this.capacity=100,this.emitter=r(),this.direction1=r(),this.direction2=r(10,10,10),this.minEmitBox=r(),this.maxEmitBox=r()}}!function(e){e.Babylon="Babylon"}(o||(o={}));class Asset{constructor(){this.type=o.Babylon}}!function(e){e.Keyboard="Keyboard"}(c||(c={}));class Input{constructor(){this.type=c.Keyboard}}class TransformSystem extends t.System{execute(){this.queries.transforms.changed.forEach(e=>{C(e)})}}TransformSystem.queries={transforms:{components:[Transform],listen:{changed:[Transform]}}};class CameraSystem extends t.System{constructor(){super(...arguments),this._cameraOfScenes=new Map}init(){h(this).onSceneSwitched.add(e=>this._updateControl(e.uid))}execute(){this.queries.camera.added.forEach(t=>{let s=t.getComponent(Camera),r=d(this,s.sceneName);this._cameraOfScenes.set(r.uid,s),s.object=new e.FreeCamera("",e.Vector3.Zero(),r),C(t),this._updateControl(r.uid)}),this.queries.camera.removed.forEach(e=>{M(e.getComponent(Camera))})}_updateControl(e){let t=d(this,l(this));if(t.uid===e){let s=this._cameraOfScenes.get(e),r=h(this).renderingCanvas;s.object.attachControl(r,!0),s.pointerLock&&(t.onPointerDown=()=>{document.pointerLockElement||r.requestPointerLock()})}}}CameraSystem.queries={camera:{components:[Camera],listen:{added:!0,removed:!0}}};class MeshSystem extends t.System{execute(){this.queries.mesh.added.forEach(t=>{let s=t.getComponent(Mesh);s.object=e.MeshBuilder[`Create${s.type}`].call(this,s.type,s.options,d(this,s.sceneName)),C(t)}),this.queries.mesh.changed.forEach(e=>{let t=e.getMutableComponent(Mesh);for(let e in t)f(t,e)}),this.queries.mesh.removed.forEach(e=>{M(e.getComponent(Mesh))})}}MeshSystem.queries={mesh:{components:[Mesh],listen:{added:!0,removed:!0,changed:[Mesh]}}};class LightSystem extends t.System{execute(){this.queries.light.added.forEach(t=>{let s=t.getComponent(Light),r=p(s.direction),i=d(this,s.sceneName);switch(s.type){case n.Point:s.object=new e.PointLight(s.type,e.Vector3.Zero(),i);break;case n.Directional:s.object=new e.DirectionalLight(s.type,r,i);break;case n.Spot:s.object=new e.SpotLight(s.type,e.Vector3.Zero(),r,u(s.angle),s.exponent,i);break;default:s.object=new e.HemisphericLight(n.Hemispheric,r,i)}this._updateLight(s),C(t)}),this.queries.light.changed.forEach(e=>{this._updateLight(e.getComponent(Light))}),this.queries.light.removed.forEach(e=>{M(e.getComponent(Light))})}_updateLight(e){for(let t in e)switch(t){case"direction":b(e,t);break;case"color":this._updateColor(e,e.color);break;default:f(e,t)}}_updateColor(e,t){for(let s in t)e.object[s]=y(t[s])}}LightSystem.queries={light:{components:[Light],listen:{added:!0,removed:!0,changed:[Light]}}};class MaterialSystem extends t.System{execute(){this.queries.meshMaterial.added.forEach(t=>{let s=t.getComponent(Material);s.object=new e.StandardMaterial(s.color.diffuse,d(this,s.sceneName)),this._updateMaterial(s),t.getComponent(Mesh).object.material=s.object}),this.queries.meshMaterial.changed.forEach(e=>{this._updateMaterial(e.getComponent(Material))}),this.queries.meshMaterial.removed.forEach(e=>{M(e.getComponent(Material)),e.getComponent(Mesh).object.material=null})}_updateMaterial(e){for(let t in e)switch(t){case"color":this._updateColor(e,e.color);break;case"texture":_(e,e.texture,m(this,e.sceneName));break;default:f(e,t)}}_updateColor(e,t){for(let s in t)e.object[`${s}Color`]=y(t[s])}}MaterialSystem.queries={meshMaterial:{components:[Mesh,Material],listen:{added:!0,removed:!0,changed:[Material]}}};class ParticleSystem extends t.System{execute(){this.queries.particle.added.forEach(t=>{let s=t.getComponent(Particle);s.object=new e.ParticleSystem(s.type,s.capacity,d(this,s.sceneName));let r=s.object;switch(s.type){case a.Point:r.createPointEmitter(p(s.direction1),p(s.direction2));break;case a.Box:r.createBoxEmitter(p(s.direction1),p(s.direction2),p(s.minEmitBox),p(s.maxEmitBox));break;case a.Sphere:r.createSphereEmitter(s.radius,s.radiusRange);break;case a.DirectedSphere:r.createDirectedSphereEmitter(s.radius,p(s.direction1),p(s.direction2));break;case a.Hemisphere:r.createHemisphericEmitter(s.radius,s.radiusRange);break;case a.Cylinder:r.createCylinderEmitter(s.radius,s.height,s.radiusRange,Math.random());break;case a.DirectedCylinder:r.createDirectedCylinderEmitter(s.radius,s.height,s.radiusRange,p(s.direction1),p(s.direction2));break;case a.Cone:r.createConeEmitter(s.radius,s.angle)}this._updateParticle(s),C(t),r.start()}),this.queries.particle.changed.forEach(e=>{this._updateParticle(e.getComponent(Particle))}),this.queries.particle.removed.forEach(e=>{let t=e.getComponent(Particle);t.object.stop(),M(t)})}_updateParticle(e){for(let t in e)switch(t){case"emitter":case"direction1":case"direction2":case"minEmitBox":case"maxEmitBox":b(e,t);break;case"texture":_(e,e.texture,m(this,e.sceneName));break;case"color":this._updateColor(e,e.color);break;default:f(e,t)}}_updateColor(e,t){for(let s in t)e.object[s]=S(t[s])}}ParticleSystem.queries={particle:{components:[Particle],listen:{added:!0,removed:!0,changed:[Particle]}}};class AssetSystem extends t.System{execute(){this.queries.asset.added.forEach(e=>{let t=e.getComponent(Asset),s=m(this,t.sceneName);switch(t.type){default:{let r=t.url.lastIndexOf("/")+1;s.addMeshTask(o.Babylon,"",t.url.substring(0,r),t.url.substring(r,t.url.length)).onSuccess=s=>{t.object=s.loadedMeshes[0],C(e)};break}}s.load(),s.reset()}),this.queries.asset.removed.forEach(e=>{M(e.getComponent(Asset))})}}AssetSystem.queries={asset:{components:[Asset],listen:{added:!0,removed:!0}}};class InputSystem extends t.System{execute(){this.queries.input.added.forEach(e=>{let t=e.getComponent(Input);switch(t.type){case c.Keyboard:t.onKey&&d(this,t.sceneName).onKeyboardObservable.add(e=>t.onKey.call(t,e.event.key,1===e.type,2===e.type))}}),this.queries.input.removed.forEach(e=>{let t=e.getComponent(Input);switch(t.type){case c.Keyboard:d(this,t.sceneName).onKeyboardObservable.clear()}})}}InputSystem.queries={input:{components:[Input],listen:{added:!0,removed:!0}}};var v=Object.freeze({__proto__:null,GameSystem:GameSystem,TransformSystem:TransformSystem,CameraSystem:CameraSystem,MeshSystem:MeshSystem,LightSystem:LightSystem,MaterialSystem:MaterialSystem,ParticleSystem:ParticleSystem,AssetSystem:AssetSystem,InputSystem:InputSystem,Transform:Transform,Camera:Camera,get MeshTypes(){return i},Mesh:Mesh,get LightTypes(){return n},Light:Light,Material:Material,get ParticleTypes(){return a},Particle:Particle,get AssetTypes(){return o},Asset:Asset,get InputTypes(){return c},Input:Input,degreeToRadians:u,radiansToDegree:function(t){return e.Angle.FromRadians(t).degrees()},xyzToVector3:p,xyzToVector3Radians:g,vector3ToXyz:function(e){return{x:e.x,y:e.y,z:e.z}},vector3ToXyzDegree:function(e){return{x:e.x,y:e.y,z:e.z}},hexToColor3:y,hexToColor4:S,getScene:d,getActiveSceneName:l,getAssetManager:m});window.EB=v}(BABYLON,ECSY);
