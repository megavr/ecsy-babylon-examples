!function(e,t){"use strict";class Scene{constructor(){this.options={}}}function s(t){return e.Angle.FromDegrees(t).radians()}function i(t){return new e.Vector3(t.x,t.y,t.z)}function r(t){return new e.Vector3(s(t.x),s(t.y),s(t.z))}function n(e,t,s){return e&&t&&s?{x:e,y:t,z:s}:{x:0,y:0,z:0}}class Transform{constructor(){this.position=n(),this.rotation=n(),this.scale=n(1,1,1)}}class Camera{constructor(){this.pointerLock=!1}}var o,a,c,h,d;!function(e){e.Box="Box",e.Plane="Plane",e.Sphere="Sphere",e.Ground="Ground"}(o||(o={}));class Mesh{constructor(){this.type=o.Box,this.options={}}}!function(e){e.Point="Point",e.Directional="Directional",e.Spot="Spot",e.Hemispheric="Hemispheric"}(a||(a={}));class Light{constructor(){this.type=a.Hemispheric,this.direction=n()}}function u(e,t){e.object[t]=e[t]}function l(e,t){e.object[t]=i(e[t])}function m(e){let t=e.getComponents();for(let s in t){let i=t[s];i.object&&e.hasComponent(Transform)&&p(e.getMutableComponent(Transform),i)}}function p(e,t){let s=t.object;s.position&&(s.position=i(e.position)),s.rotation&&(s.rotation=r(e.rotation)),s.scaling&&(s.scaling=i(e.scale))}function g(e){e.object&&e.object.dispose()}function y(e,t,s){for(let i in t){let r=t[i];s.addTextureTask(i,r.url).onSuccess=t=>{let s=t.texture;for(let e in r)"url"!==e&&(s[e]=r[e]);let n=`${i}Texture`,o=e.object;o[n]&&g(o[n]),o[n]=s}}s.load(),s.reset()}function S(t){return e.Color3.FromHexString(t)}function f(t){return e.Color4.FromHexString(t)}class Material{constructor(){var e;this.color=e?{diffuse:e}:{diffuse:"#ffffff"}}}!function(e){e.Point="Point",e.Box="Box",e.Sphere="Sphere",e.DirectedSphere="DirectedSphere",e.Hemisphere="Hemisphere",e.Cylinder="Cylinder",e.DirectedCylinder="DirectedCylinder",e.Cone="Cone"}(c||(c={}));class Particle{constructor(){this.type=c.Point,this.capacity=100,this.emitter=n(),this.direction1=n(),this.direction2=n(10,10,10),this.minEmitBox=n(),this.maxEmitBox=n()}}!function(e){e.Babylon="Babylon"}(h||(h={}));class Asset{constructor(){this.type=h.Babylon}}!function(e){e.Keyboard="Keyboard"}(d||(d={}));class Input{constructor(){this.type=d.Keyboard}}function b(e){return e.world}class GameSystem extends t.System{constructor(){super(...arguments),this._assetManagers=new Map,this.onSceneSwitched=new e.Observable}get renderingCanvas(){return this._engine.getRenderingCanvas()}get scenes(){return this._engine.scenes}get activeScene(){return this._activeScene}init(){this._render=this._render.bind(this)}execute(){this.queries.scene.added.forEach(t=>{let s=t.getComponent(Scene);s.object=new e.Scene(this._engine,s.options),1===this._engine.scenes.length&&(this._activeScene=s.object),this._updateScene(t);let i=new e.AssetsManager(s.object);i.useDefaultLoadingScreen=!1,this._assetManagers.set(s.object.uid,i)}),this.queries.scene.changed.forEach(e=>{this._updateScene(e)}),this.queries.scene.removed.forEach(e=>{g(e.getComponent(Scene))})}_updateScene(e){let t=e.getComponent(Scene);for(let s in t)switch(s){case"texture":y(t,t.texture,this.getAssetManager(e));break;case"color":this._updateColor(t,t.color);break;default:u(t,s)}}_updateColor(e,t){for(let s in t)switch(s){case"clear":e.object[`${s}Color`]=f(t[s]);break;default:e.object[`${s}Color`]=S(t[s])}}start(t,s,i,r){return this._engine=new e.Engine(t,s,i,r),this._engine.runRenderLoop(this._render),this}switchScene(e){return this._activeScene=e.getComponent(Scene).object,this.onSceneSwitched.notifyObservers(this._activeScene),this}getAssetManager(e){return e?this._assetManagers.get(e.getComponent(Scene).object.uid):this._assetManagers.get(this._activeScene.uid)}_render(){b(this).execute(this._engine.getDeltaTime(),performance.now()),b(this).enabled&&this._activeScene.render()}}GameSystem.queries={scene:{components:[Scene],listen:{added:!0,removed:!0,changed:[Scene]}}};class TransformSystem extends t.System{execute(){this.queries.transforms.changed.forEach(e=>{m(e)})}}function _(e){return b(e).getSystem(GameSystem)}function C(e){return _(e).renderingCanvas}function x(e){return _(e).scenes}function M(e,t){return t?t.getComponent(Scene).object:_(e).activeScene}function v(e,t){return _(e).getAssetManager(t)}TransformSystem.queries={transforms:{components:[Transform],listen:{changed:[Transform]}}};class CameraSystem extends t.System{constructor(){super(...arguments),this._cameras=new Map}init(){_(this).onSceneSwitched.add(e=>this._updateControl(e)),this._pointerLock=this._pointerLock.bind(this)}execute(){this.queries.camera.added.forEach(t=>{let s=t.getComponent(Camera),i=M(this,s.scene);s.object=new e.FreeCamera("",e.Vector3.Zero(),i),m(t),this._cameras.set(i.uid,s),this._updateControl(i)}),this.queries.camera.removed.forEach(e=>{let t=e.getComponent(Camera),s=M(this,t.scene);this._removeControl(s),this._cameras.has(s.uid)&&this._cameras.delete(s.uid),g(t)})}_updateControl(e){if(e.uid===M(this).uid){x(this).forEach(e=>this._removeControl(e));let t=this._cameras.get(e.uid);t.object.attachControl(C(this)),t.pointerLock?e.onPointerObservable.add(this._pointerLock):document.exitPointerLock()}}_removeControl(e){this._cameras.forEach((t,s)=>s===e.uid&&t.object.detachControl(C(this))),e.onPointerObservable.removeCallback(this._pointerLock)}_pointerLock(e){"pointerdown"===e.event.type&&(document.pointerLockElement||C(this).requestPointerLock())}}CameraSystem.queries={camera:{components:[Camera],listen:{added:!0,removed:!0}}};class MeshSystem extends t.System{execute(){this.queries.mesh.added.forEach(t=>{let s=t.getComponent(Mesh);s.object=e.MeshBuilder[`Create${s.type}`].call(this,s.type,s.options,M(this,s.scene)),m(t)}),this.queries.mesh.changed.forEach(e=>{let t=e.getMutableComponent(Mesh);for(let e in t)u(t,e)}),this.queries.mesh.removed.forEach(e=>{g(e.getComponent(Mesh))})}}MeshSystem.queries={mesh:{components:[Mesh],listen:{added:!0,removed:!0,changed:[Mesh]}}};class LightSystem extends t.System{execute(){this.queries.light.added.forEach(t=>{let r=t.getComponent(Light),n=i(r.direction),o=M(this,r.scene);switch(r.type){case a.Point:r.object=new e.PointLight(r.type,e.Vector3.Zero(),o);break;case a.Directional:r.object=new e.DirectionalLight(r.type,n,o);break;case a.Spot:r.object=new e.SpotLight(r.type,e.Vector3.Zero(),n,s(r.angle),r.exponent,o);break;default:r.object=new e.HemisphericLight(a.Hemispheric,n,o)}this._updateLight(r),m(t)}),this.queries.light.changed.forEach(e=>{this._updateLight(e.getComponent(Light))}),this.queries.light.removed.forEach(e=>{g(e.getComponent(Light))})}_updateLight(e){for(let t in e)switch(t){case"direction":l(e,t);break;case"color":this._updateColor(e,e.color);break;default:u(e,t)}}_updateColor(e,t){for(let s in t)e.object[s]=S(t[s])}}LightSystem.queries={light:{components:[Light],listen:{added:!0,removed:!0,changed:[Light]}}};class MaterialSystem extends t.System{execute(){this.queries.meshMaterial.added.forEach(t=>{let s=t.getComponent(Material);s.object=new e.StandardMaterial(s.color.diffuse,M(this,s.scene)),this._updateMaterial(s),t.getComponent(Mesh).object.material=s.object}),this.queries.meshMaterial.changed.forEach(e=>{this._updateMaterial(e.getComponent(Material))}),this.queries.meshMaterial.removed.forEach(e=>{g(e.getComponent(Material)),e.getComponent(Mesh).object.material=null})}_updateMaterial(e){for(let t in e)switch(t){case"color":this._updateColor(e,e.color);break;case"texture":y(e,e.texture,v(this,e.scene));break;default:u(e,t)}}_updateColor(e,t){for(let s in t)e.object[`${s}Color`]=S(t[s])}}MaterialSystem.queries={meshMaterial:{components:[Mesh,Material],listen:{added:!0,removed:!0,changed:[Material]}}};class ParticleSystem extends t.System{execute(){this.queries.particle.added.forEach(t=>{let s=t.getComponent(Particle);s.object=new e.ParticleSystem(s.type,s.capacity,M(this,s.scene));let r=s.object;switch(s.type){case c.Point:r.createPointEmitter(i(s.direction1),i(s.direction2));break;case c.Box:r.createBoxEmitter(i(s.direction1),i(s.direction2),i(s.minEmitBox),i(s.maxEmitBox));break;case c.Sphere:r.createSphereEmitter(s.radius,s.radiusRange);break;case c.DirectedSphere:r.createDirectedSphereEmitter(s.radius,i(s.direction1),i(s.direction2));break;case c.Hemisphere:r.createHemisphericEmitter(s.radius,s.radiusRange);break;case c.Cylinder:r.createCylinderEmitter(s.radius,s.height,s.radiusRange,Math.random());break;case c.DirectedCylinder:r.createDirectedCylinderEmitter(s.radius,s.height,s.radiusRange,i(s.direction1),i(s.direction2));break;case c.Cone:r.createConeEmitter(s.radius,s.angle)}this._updateParticle(s),m(t),r.start()}),this.queries.particle.changed.forEach(e=>{this._updateParticle(e.getComponent(Particle))}),this.queries.particle.removed.forEach(e=>{let t=e.getComponent(Particle);t.object.stop(),g(t)})}_updateParticle(e){for(let t in e)switch(t){case"emitter":case"direction1":case"direction2":case"minEmitBox":case"maxEmitBox":l(e,t);break;case"texture":y(e,e.texture,v(this,e.scene));break;case"color":this._updateColor(e,e.color);break;default:u(e,t)}}_updateColor(e,t){for(let s in t)e.object[s]=f(t[s])}}ParticleSystem.queries={particle:{components:[Particle],listen:{added:!0,removed:!0,changed:[Particle]}}};class AssetSystem extends t.System{execute(){this.queries.asset.added.forEach(e=>{let t=e.getComponent(Asset),s=v(this,t.scene);switch(t.type){default:{let i=t.url.lastIndexOf("/")+1;s.addMeshTask(h.Babylon,"",t.url.substring(0,i),t.url.substring(i,t.url.length)).onSuccess=s=>{t.object=s.loadedMeshes[0],m(e)};break}}s.load(),s.reset()}),this.queries.asset.removed.forEach(e=>{g(e.getComponent(Asset))})}}AssetSystem.queries={asset:{components:[Asset],listen:{added:!0,removed:!0}}};class InputSystem extends t.System{constructor(){super(...arguments),this._inputs=new Map}init(){_(this).onSceneSwitched.add(e=>this._updateOnKey(e)),this._onKey=this._onKey.bind(this)}execute(){this.queries.input.added.forEach(e=>{let t=e.getComponent(Input),s=M(this,t.scene);t.type,this._inputs.has(s.uid)||(this._inputs.set(s.uid,t),this._updateOnKey(s))}),this.queries.input.removed.forEach(e=>{let t=e.getComponent(Input),s=M(this,t.scene);t.type,this._inputs.has(s.uid)&&(this._inputs.delete(s.uid),this._removeOnKey(s))})}_updateOnKey(e){e.uid===M(this).uid&&(x(this).forEach(e=>this._removeOnKey(e)),this._input=this._inputs.get(e.uid),this._input.onKey&&e.onKeyboardObservable.add(this._onKey))}_removeOnKey(e){e.onKeyboardObservable.removeCallback(this._onKey)}_onKey(e){this._input.onKey.call(this._input,e.event.key,1===e.type,2===e.type)}}InputSystem.queries={input:{components:[Input],listen:{added:!0,removed:!0}}};var E=Object.freeze({__proto__:null,GameSystem:GameSystem,TransformSystem:TransformSystem,CameraSystem:CameraSystem,MeshSystem:MeshSystem,LightSystem:LightSystem,MaterialSystem:MaterialSystem,ParticleSystem:ParticleSystem,AssetSystem:AssetSystem,InputSystem:InputSystem,Scene:Scene,Transform:Transform,Camera:Camera,get MeshTypes(){return o},Mesh:Mesh,get LightTypes(){return a},Light:Light,Material:Material,get ParticleTypes(){return c},Particle:Particle,get AssetTypes(){return h},Asset:Asset,get InputTypes(){return d},Input:Input,getScene:M,getAssetManager:v,degreeToRadians:s,xyzToVector3:i,xyzToVector3Radians:r,hexToColor3:S,hexToColor4:f});window.EB=E}(BABYLON,ECSY);
